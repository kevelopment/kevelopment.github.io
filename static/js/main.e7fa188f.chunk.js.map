{"version":3,"sources":["components/ConfigurationBar.jsx","helper/ArrayHelper.js","components/buttons/NavigateBackFab.jsx","components/Question.jsx","components/exam/Exam.jsx","components/Home.jsx","components/training/Training.jsx","App.jsx","serviceWorker.js","index.js"],"names":["ConfigurationBar","timeLeft","moment","duration","this","props","timeRemaining","classes","AppBar","position","className","Toolbar","Typography","variant","title","noWrap","showTimer","Box","flexDirection","display","alignItems","HourglassEmpty","timer","minutes","seconds","showQuestion","currentQuestionIndex","maxNumberQuestions","React","Component","withStyles","theme","flexGrow","rightAlign","marginLeft","leftAlign","marginRight","menuButton","spacing","shuffle","origin","array","slice","i","length","j","Math","floor","random","NavigateBackFab","navigateBack","onClick","history","push","Routes","HOME","Fab","color","fab","ArrowBack","fabIcon","withRouter","bottom","left","Question","state","isWrongAnswer","selectedAnswer","helperText","undefined","handleChange","event","setState","target","value","onNext","isValid","question","correctAnswer","showCorrectAnswer","answers","window","scrollTo","showPreviousQuestion","onPrevious","handleClose","prevProps","hidden","Slide","in","direction","mountOnEnter","unmountOnExit","Card","container","CardHeader","index","CardContent","image","style","textAlign","src","alt","FormControl","component","formControl","disabled","disableControls","fullWidth","RadioGroup","name","onChange","map","answer","FormControlLabel","control","Radio","label","key","FormHelperText","formHelper","CardActions","hidePrevious","Button","padding","palette","error","main","marginBottom","marginTop","Exam","componentDidMount","startTimer","interval","setInterval","newTimeRemaining","setTimeRemaining","stopTimer","clearInterval","incrementCurrentIndex","currentIndex","correctAnswers","nextIndex","questions","isFinished","setIndex","decrementCurrentIndex","previousIndex","stopExam","getResultPercentage","renderQuestions","setMaxIndex","Home","startTraining","TRAINING","startExam","EXAM","isLoaded","justifyContent","CircularProgress","size","flex","width","p","Training","stopTraining","appTheme","createMuiTheme","primary","secondary","Object","freeze","App","allQuestions","setCurrentIndex","maxIndex","fetch","then","resp","json","ThemeProvider","CssBaseline","height","data-testid","location","pathname","path","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"0ZAWMA,E,uKAEF,IAAMC,EAAWC,IAAOC,SAASC,KAAKC,MAAMC,cAAe,WACnDC,EAAYH,KAAKC,MAAjBE,QACR,OACE,kBAACC,EAAA,EAAD,CAAQC,SAAS,SAASC,UAAW,gBACnC,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKH,UAAWH,EAAQO,MAAOC,QAAM,GAAzD,iBAGCX,KAAKC,MAAMW,UACV,kBAACC,EAAA,EAAD,CAAKC,cAAc,MAAMC,QAAQ,OAAOC,WAAW,UACjD,kBAACC,EAAA,EAAD,MACA,kBAACT,EAAA,EAAD,CAAYF,UAAWH,EAAQe,MAAOT,QAAQ,KAAKE,QAAM,GAAzD,UACMd,EAASsB,UADf,YAC4BtB,EAASuB,UADrC,UAKF,GAEDpB,KAAKC,MAAMoB,aACV,kBAACb,EAAA,EAAD,CAAYC,QAAQ,KAAKE,QAAM,GAA/B,UACMX,KAAKC,MAAMqB,qBAAuB,EADxC,cAEItB,KAAKC,MAAMsB,qBAIf,S,GA3BmBC,IAAMC,WAoDtBC,eAjBA,SAACC,GAAD,MAAY,CACzBjB,MAAO,CACLkB,SAAU,GAEZC,WAAY,CACVC,WAAY,QAEdC,UAAW,CACTC,YAAa,QAEfC,WAAY,CACVD,YAAaL,EAAMO,QAAQ,IAE7BhB,MAAO,CACLc,YAAaL,EAAMO,QAAQ,OAGhBR,CAAmB9B,G,2BCjDnBuC,MATR,SAAiBC,GAEtB,IADA,IAAMC,EAAQD,EAAOE,QACZC,EAAIF,EAAMG,OAAS,EAAGD,EAAI,EAAGA,IAAK,CACzC,IAAME,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IADD,EAElB,CAACF,EAAMI,GAAIJ,EAAME,IAAvCF,EAAME,GAFkC,KAE9BF,EAAMI,GAFwB,KAI3C,OAAOJ,G,kBCLHQ,E,4MACJC,aAAe,WACb,EAAK7C,MAAM8C,UACX,EAAK9C,MAAM+C,QAAQC,KAAKC,EAAOC,O,uDAGvB,IACAhD,EAAYH,KAAKC,MAAjBE,QACR,OACE,kBAACiD,EAAA,EAAD,CACEC,MAAM,YACN5C,QAAQ,WACRH,UAAWH,EAAQmD,IACnBP,QAAS/C,KAAK8C,cAEd,kBAACS,EAAA,EAAD,CAAWjD,UAAWH,EAAQqD,UANhC,Y,GATwBhC,IAAMC,WAiCrBgC,cAAW/B,aAXX,SAACC,GAAD,MAAY,CACzB2B,IAAK,CACHjD,SAAU,WACVqD,OAAQ/B,EAAMO,QAAQ,GACtByB,KAAMhC,EAAMO,QAAQ,IAEtBsB,QAAS,CACPxB,YAAaL,EAAMO,QAAQ,OAILR,CAAmBmB,I,wECtBvCe,E,4MACJC,MAAQ,CACNC,eAAe,EACfC,gBAAiB,EACjBC,gBAAYC,G,EASdC,aAAe,SAACC,GACd,EAAKC,SAAS,CAAEL,gBAAiBI,EAAME,OAAOC,S,EAGhDC,OAAS,WACP,IAAIP,OAAaC,EACbO,GAAU,GACqB,IAA/B,EAAKX,MAAME,gBACbS,GAAU,EACVR,EAAa,4BAEb,EAAKH,MAAME,iBAAmB,EAAK9D,MAAMwE,SAASC,gBAElDF,GAAU,EACVR,EAAa,kBAGVQ,GAAW,EAAKvE,MAAM0E,oBACzBX,EAAU,6BACR,EAAK/D,MAAMwE,SAASG,QAAQ,EAAK3E,MAAMwE,SAASC,iBAKpDG,OAAOC,SAAS,EAAG,GACnB,EAAKV,SAAS,CAAEJ,eAChB,EAAK/D,MAAMsE,OAAO,CAAEC,a,EAGtBO,qBAAuB,WACrB,EAAKX,SAAS,CAAEJ,gBAAYC,IAC5B,EAAKhE,MAAM+E,c,EAGbC,YAAc,WACZ,EAAKb,SAAS,CAAEJ,gBAAYC,K,iEAzCXiB,GACbA,EAAUT,WAAazE,KAAKC,MAAMwE,UACpCzE,KAAKoE,SAAS,CAAEL,gBAAiB,M,+BA0C3B,IACA5D,EAAYH,KAAKC,MAAjBE,QACR,OAAIH,KAAKC,MAAMkF,OACN,qCAIP,kBAACC,EAAA,EAAD,CACEC,IAA0B,IAAtBrF,KAAKC,MAAMkF,OACfG,UAAWtF,KAAKC,MAAMqF,UACtBC,cAAY,EACZC,eAAa,GAEb,kBAACC,EAAA,EAAD,CAAMnF,UAAWH,EAAQuF,WACvB,kBAACC,EAAA,EAAD,CACEjF,MAAK,UAAKV,KAAKC,MAAM2F,MAAQ,EAAxB,aAA8B5F,KAAKC,MAAMwE,SAASA,YAEzD,kBAACoB,EAAA,EAAD,KACG7F,KAAKC,MAAMwE,SAASqB,MACnB,kBAACjF,EAAA,EAAD,CAAKkF,MAAO,CAAEC,UAAW,WACvB,yBACEC,IAC2B,QAAUjG,KAAKC,MAAMwE,SAASqB,MAEzDI,IAAKlG,KAAKC,MAAMwE,SAASqB,SAI7B,GAEF,kBAACK,EAAA,EAAD,CACEC,UAAU,WACV9F,UAAWH,EAAQkG,YAEnBC,SAAUtG,KAAKC,MAAMsG,gBACrBC,WAAS,GAET,kBAACC,EAAA,EAAD,CACEC,KAAK,gBACLpC,MAAOtE,KAAK6D,MAAME,eAClB4C,SAAU3G,KAAKkE,cAEdlE,KAAKC,MAAMwE,SAASG,QAAQgC,KAAI,SAACC,EAAQjB,GAAT,OAC/B,kBAACkB,EAAA,EAAD,CACExC,MAAOsB,EACPmB,QAAS,kBAACC,EAAA,EAAD,MACTC,MAAOJ,EACPK,IAAG,iBAAYtB,UAKvB,kBAACuB,EAAA,EAAD,CAAgB7G,UAAWH,EAAQiH,YAChCpH,KAAK6D,MAAMG,aAGhB,kBAACqD,EAAA,EAAD,KACGrH,KAAKC,MAAMqH,aACV,GAEA,kBAACC,EAAA,EAAD,CACEjH,UAAWH,EAAQ4B,UACnBsB,MAAM,UACNN,QAAS/C,KAAK+E,qBACduB,SAA+B,IAArBtG,KAAKC,MAAM2F,OAJvB,YASD5F,KAAKC,MAAMsG,gBACV,GAEA,kBAACgB,EAAA,EAAD,CACEjH,UAAWH,EAAQ0B,WACnBwB,MAAM,UACNN,QAAS/C,KAAKuE,QAHhB,e,GA3HS/C,IAAMC,WAkJdC,eARA,SAACC,GAAD,MAAY,CACzB0E,YAAa,CAAEmB,QAAS7F,EAAMO,QAAQ,IACtCkF,WAAY,CAAEpB,UAAW,SAAU3C,MAAO1B,EAAM8F,QAAQC,MAAMC,MAC9D5F,UAAW,CAAEC,YAAa,QAC1BH,WAAY,CAAEC,WAAY,QAC1B4D,UAAW,CAAEkC,aAAcjG,EAAMO,QAAQ,GAAI2F,UAAWlG,EAAMO,QAAQ,OAGzDR,CAAmBkC,GCvBnBkE,E,kDA5Hb,WAAY7H,GAAQ,IAAD,8BACjB,cAAMA,IAaR8H,kBAAoB,WAClB,EAAKC,cAfY,EAkBnBA,WAAa,WACX,EAAKC,SAAWC,aAAY,WAAO,IAE3BC,EADoB,EAAKtE,MAAvB3D,cACiC,EACzC,EAAKkE,SAAS,CAAElE,cAAeiI,IAC/B,EAAKlI,MAAMmI,iBAAiB,EAAKvE,MAAM3D,iBACtC,MAxBc,EA2BnBmI,UAAY,WACN,EAAKJ,WACPK,cAAc,EAAKL,UACnB,EAAK7D,SAAS,CAAElE,cAlCJ,OAmCZ,EAAKD,MAAMmI,iBAAiB,EAAKvE,MAAM3D,iBA/BxB,EAmCnBqI,sBAAwB,YAAkB,IAAf/D,EAAc,EAAdA,QAAc,EACE,EAAKX,MAAtC2E,EAD+B,EAC/BA,aAAcC,EADiB,EACjBA,eAChBC,EAAYF,EAAe,EAMjC,GAJIhE,GACF,EAAKJ,SAAS,CAAEqE,eAAgBA,EAAiB,IAG/CC,IAAc,EAAK7E,MAAM8E,UAAUnG,OAGrC,OAFA,EAAK6F,iBACL,EAAKjE,SAAS,CAAEwE,YAAY,IAI9B,EAAK3I,MAAM4I,SAASH,GACpB,EAAKtE,SAAS,CACZoE,aAAcE,EACdpD,UAAW,UApDI,EAwDnBwD,sBAAwB,WAAO,IAEzBC,EADmB,EAAKlF,MAAtB2E,aAC6B,EAC/BO,EAAgB,IAClBA,EAAgB,GAGlB,EAAK9I,MAAM4I,SAASE,GACpB,EAAK3E,SAAS,CAAEoE,aAAcO,EAAezD,UAAW,WAhEvC,EAmEnB0D,SAAW,WACT,EAAK/I,MAAM4I,SAAS,GACpB,EAAKR,YACL,EAAKjE,SAAS,CACZoE,aAAc,EACdtI,mBAAe+D,EACfwE,eAAgB,KAzED,EA6EnBQ,oBAAsB,WACpB,OAAkC,IAA9B,EAAKpF,MAAM4E,eACN,EAGD,EAAK5E,MAAM4E,eAAiB,EAAK5E,MAAM8E,UAAUnG,OAAU,KAlFlD,EAqFnB0G,gBAAkB,SAACP,GACjB,OAAOA,EAAU/B,KAAI,SAACnC,EAAUmB,GAAX,OACnB,kBAAC,EAAD,CACEnB,SAAUA,EACVF,OAAQ,EAAKgE,sBACb3C,MAAOA,EACPT,OAAQ,EAAKtB,MAAM2E,eAAiB5C,IAAU,EAAK/B,MAAM+E,WACzDtD,UAAW,EAAKzB,MAAMyB,UACtB4B,IAAG,mBAActB,GACjB0B,cAAY,EACZf,iBAA2C,IAA1B,EAAK1C,MAAM+E,WAC5BjE,mBAAiB,QA9FrB,EAAKd,MAAQ,CACX2E,aAAc,EACdG,UAAWxG,EAAQlC,EAAM0I,WAAWrG,MAAM,EAPtB,IAQpBpC,cATY,KAUZuI,eAAgB,EAChBnD,UAAW,QAEb,EAAKrF,MAAM4I,SAAS,EAAKhF,MAAM2E,cAC/B,EAAKvI,MAAMkJ,YAAY,EAAKtF,MAAM8E,UAAUnG,QAC5C,EAAKvC,MAAMmI,iBAAiB,EAAKvE,MAAM3D,eAXtB,E,qDAsGjB,OACE,kBAACW,EAAA,EAAD,KACGb,KAAK6D,MAAM+E,WACV,kBAACnD,EAAA,EAAD,CAAMM,MAAO,CAAE6B,aAAc,QAC3B,kBAACjC,EAAA,EAAD,CAAYjF,MAAM,cAClB,kBAACmF,EAAA,EAAD,KACE,kBAACrF,EAAA,EAAD,yBACoBR,KAAK6D,MAAM4E,eAD/B,KACiD,IAC9CzI,KAAK6D,MAAM8E,UAAUnG,OAFxB,KAEkCxC,KAAKiJ,sBAFvC,QAOJ,GAEDjJ,KAAKkJ,gBAAgBlJ,KAAK6D,MAAM8E,WACjC,kBAAC,EAAD,CAAiB5F,QAAS/C,KAAKgJ,gB,GAvHpBxH,IAAMC,W,SCDnB2H,E,4MAMJC,cAAgB,WACd,EAAKpJ,MAAM+C,QAAQC,KAAKC,EAAOoG,W,EAQjCC,UAAY,WACV,EAAKtJ,MAAM+C,QAAQC,KAAKC,EAAOsG,O,uDAI/B,IAA4B,IAAxBxJ,KAAKC,MAAMwJ,SACb,OACE,kBAAC5I,EAAA,EAAD,CAAKE,QAAQ,OAAO2I,eAAe,UACjC,kBAACC,EAAA,EAAD,CAAkBC,KAAM,UAJvB,IASCzJ,EAAYH,KAAKC,MAAjBE,QACR,OACE,kBAACsF,EAAA,EAAD,KACE,kBAACE,EAAA,EAAD,CACEjF,MAAM,gCACNqF,MAAO,CAAEC,UAAW,YAEtB,kBAACH,EAAA,EAAD,CAAavF,UAAWH,EAAQuF,WAC9B,kBAAC7E,EAAA,EAAD,CAAKgJ,KAAM,EAAGC,MAAO,EAAGC,EAAG,GACzB,kBAACvJ,EAAA,EAAD,uBACA,kBAACA,EAAA,EAAD,gEAGA,kBAAC+G,EAAA,EAAD,CACElE,MAAM,YACN5C,QAAQ,YACRsC,QAAS/C,KAAKqJ,eAHhB,mBAQF,kBAACxI,EAAA,EAAD,CAAKgJ,KAAM,EAAGC,MAAO,EAAGC,EAAG,GACzB,kBAACvJ,EAAA,EAAD,kBACA,kBAACA,EAAA,EAAD,gHAIA,kBAAC+G,EAAA,EAAD,CACElE,MAAM,YACN5C,QAAQ,YACRsC,QAAS/C,KAAKuJ,WAHhB,qB,GAvDO/H,IAAMC,WA4EVgC,cAAW/B,aAPX,SAACC,GAAD,MAAY,CACzB+D,UAAW,CACT3E,QAAS,OACTD,cAAe,aAIOY,CAAmB0H,ICjB9BY,E,kDAlEb,WAAY/J,GAAQ,IAAD,8BACjB,cAAMA,IAURsI,sBAAwB,YAAkB,IAAf/D,EAAc,EAAdA,QAErBkE,EADqB,EAAK7E,MAAtB2E,aACuB,EAC3BE,EAAY,EAAK7E,MAAM8E,UAAUnG,SACnCkG,EAAY,GAGTlE,IAIL,EAAKvE,MAAM4I,SAASH,GACpB,EAAKtE,SAAS,CAAEoE,aAAcE,EAAWpD,UAAW,WAvBnC,EA0BnBwD,sBAAwB,WAAO,IAEzBC,EADqB,EAAKlF,MAAtB2E,aAC2B,EAC/BO,EAAgB,IAClBA,EAAgB,GAGlB,EAAK9I,MAAM4I,SAASE,GACpB,EAAK3E,SAAS,CAAEoE,aAAcO,EAAezD,UAAW,WAlCvC,EAqCnB2E,aAAe,WACb,EAAKhK,MAAM4I,SAAS,GACpB,EAAKzE,SAAS,CAAEoE,aAAc,KAvCb,EA0CnBU,gBAAkB,SAACP,GACjB,OAAOA,EAAU/B,KAAI,SAACnC,EAAUmB,GAAX,OACnB,kBAAC,EAAD,CACEnB,SAAUA,EACVF,OAAQ,EAAKgE,sBACbvD,WAAY,EAAK8D,sBACjBlD,MAAO,EAAK/B,MAAM2E,aAClBrD,OAAQS,IAAU,EAAK/B,MAAM2E,aAC7BlD,UAAW,EAAKzB,MAAMyB,UACtB4B,IAAG,mBAActB,SAjDrB,EAAK/B,MAAQ,CACX2E,aAAc,EACdG,UAAWxG,EAAQlC,EAAM0I,WACzBrD,UAAW,QAEb,EAAKrF,MAAM4I,SAAS,EAAKhF,MAAM2E,cAC/B,EAAKvI,MAAMkJ,YAAY,EAAKtF,MAAM8E,UAAUnG,QAR3B,E,qDAyDjB,OACE,kBAAC3B,EAAA,EAAD,KACGb,KAAKkJ,gBAAgBlJ,KAAK6D,MAAM8E,WACjC,kBAAC,EAAD,CAAiB5F,QAAS/C,KAAKiK,oB,GA7DhBzI,IAAMC,WCQvByI,EAAWC,YAAe,CAC9B1C,QAAS,CAEP2C,QAAS,CACPzC,KAAM,WAER0C,UAAW,CACT1C,KAAM,cAQCzE,EAASoH,OAAOC,OAAO,CAClCpH,KAAM,IACNmG,SAAU,YACVE,KAAM,UAsFOgB,G,4MAlFb3G,MAAQ,CACN4G,aAAc,GACdhB,UAAU,EACVjB,aAAc,EACdtI,cAAe,G,EAYjBwK,gBAAkB,SAAC9E,GACjB,EAAKxB,SAAS,CAAEoE,aAAc5C,K,EAGhCuD,YAAc,SAACvD,GACb,EAAKxB,SAAS,CAAEuG,SAAU/E,K,EAG5BwC,iBAAmB,SAAClI,GAClB,EAAKkE,SAAS,CAAElE,mB,kMAjBW0K,MAAM,aAAaC,MAAK,SAACC,GAAD,OAAUA,EAAKC,U,OAA5DN,E,OACNzK,KAAKoE,SAAS,CACZqG,eACAhB,UAAU,EACVkB,SAAUF,EAAajI,OAAS,I,qIAiBlC,OACE,kBAACwI,EAAA,EAAD,CAAerJ,MAAOuI,GACpB,kBAACe,EAAA,EAAD,MACA,kBAACpK,EAAA,EAAD,CACEiJ,MAAO,EACPoB,OAAQ,EACRnK,QAAQ,OACRD,cAAc,SACdqK,cAAY,kBAEZ,kBAAC,EAAD,CACE7J,qBAAsBtB,KAAK6D,MAAM2E,aACjCjH,mBAAoBvB,KAAK6D,MAAM8G,SAC/BzK,cAAeF,KAAK6D,MAAM3D,cAC1BmB,aACEwD,OAAOuG,SAASC,WAAanI,EAAOoG,UACpCzE,OAAOuG,SAASC,WAAanI,EAAOsG,KAEtC5I,UAAWiE,OAAOuG,SAASC,WAAanI,EAAOsG,OAGjD,kBAAC3I,EAAA,EAAD,CAAKgJ,KAAK,WAAWE,EAAG,GACtB,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOuB,KAAMpI,EAAOsG,MAEhB,kBAAC,EAAD,CACEb,UAAW3I,KAAK6D,MAAM4G,aACtB5B,SAAU7I,KAAK0K,gBACfvB,YAAanJ,KAAKmJ,YAClBf,iBAAkBpI,KAAKoI,oBAI7B,kBAAC,IAAD,CAAOkD,KAAMpI,EAAOoG,UAClB,kBAAC,EAAD,CACEH,YAAanJ,KAAKmJ,YAClBR,UAAW3I,KAAK6D,MAAM4G,aACtB5B,SAAU7I,KAAK0K,mBAGnB,kBAAC,IAAD,CAAOY,KAAMpI,EAAOC,MAClB,kBAAC,EAAD,CAAMsG,SAAUzJ,KAAK6D,MAAM4F,qB,GAxE3BjI,IAAMC,W,MCvBJ8J,QACW,cAA7B1G,OAAOuG,SAASI,UAEe,UAA7B3G,OAAOuG,SAASI,UAEhB3G,OAAOuG,SAASI,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBpB,MAAK,SAAAqB,GACJA,EAAaC,gBAEdC,OAAM,SAAA1E,GACL2E,QAAQ3E,MAAMA,EAAM4E,c","file":"static/js/main.e7fa188f.chunk.js","sourcesContent":["import {\n  AppBar,\n  Box,\n  Toolbar,\n  Typography,\n  withStyles,\n} from \"@material-ui/core\";\nimport { HourglassEmpty } from \"@material-ui/icons\";\nimport moment from \"moment\";\nimport React from \"react\";\n\nclass ConfigurationBar extends React.Component {\n  render() {\n    const timeLeft = moment.duration(this.props.timeRemaining, \"seconds\");\n    const { classes } = this.props;\n    return (\n      <AppBar position=\"sticky\" className={\"no-selection\"}>\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.title} noWrap>\n            Doggo-Trainer\n          </Typography>\n          {this.props.showTimer ? (\n            <Box flexDirection=\"row\" display=\"flex\" alignItems=\"center\">\n              <HourglassEmpty></HourglassEmpty>\n              <Typography className={classes.timer} variant=\"h6\" noWrap>\n                {`${timeLeft.minutes()}:${timeLeft.seconds()} min`}\n              </Typography>\n            </Box>\n          ) : (\n            \"\"\n          )}\n          {this.props.showQuestion ? (\n            <Typography variant=\"h6\" noWrap>\n              {`${this.props.currentQuestionIndex + 1} / ${\n                this.props.maxNumberQuestions\n              }`}\n            </Typography>\n          ) : (\n            \"\"\n          )}\n        </Toolbar>\n      </AppBar>\n    );\n  }\n}\n\nconst styles = (theme) => ({\n  title: {\n    flexGrow: 1,\n  },\n  rightAlign: {\n    marginLeft: \"auto\",\n  },\n  leftAlign: {\n    marginRight: \"auto\",\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  timer: {\n    marginRight: theme.spacing(4),\n  },\n});\nexport default withStyles(styles)(ConfigurationBar);\n","/**\n * Shuffles array in place. ES6 version\n * Thanks to https://stackoverflow.com/a/6274381\n * @param {object[]} origin a list of items.\n */\nexport function shuffle(origin) {\n  const array = origin.slice();\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n  return array;\n}\n\nexport default shuffle;\n","import { Fab, withStyles } from \"@material-ui/core\";\nimport { ArrowBack } from \"@material-ui/icons\";\nimport React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { Routes } from \"../../App\";\n\nclass NavigateBackFab extends React.Component {\n  navigateBack = () => {\n    this.props.onClick();\n    this.props.history.push(Routes.HOME);\n  };\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <Fab\n        color=\"secondary\"\n        variant=\"extended\"\n        className={classes.fab}\n        onClick={this.navigateBack}\n      >\n        <ArrowBack className={classes.fabIcon} />\n        Back\n      </Fab>\n    );\n  }\n}\n\nconst styles = (theme) => ({\n  fab: {\n    position: \"absolute\",\n    bottom: theme.spacing(2),\n    left: theme.spacing(2),\n  },\n  fabIcon: {\n    marginRight: theme.spacing(1),\n  },\n});\n\nexport default withRouter(withStyles(styles)(NavigateBackFab));\n","import {\n  Box,\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  FormControl,\n  FormControlLabel,\n  FormHelperText,\n  Radio,\n  RadioGroup,\n  Slide,\n  withStyles,\n} from \"@material-ui/core\";\nimport React from \"react\";\n\nclass Question extends React.Component {\n  state = {\n    isWrongAnswer: false,\n    selectedAnswer: -1,\n    helperText: undefined,\n  };\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.question !== this.props.question) {\n      this.setState({ selectedAnswer: -1 });\n    }\n  }\n\n  handleChange = (event) => {\n    this.setState({ selectedAnswer: +event.target.value });\n  };\n\n  onNext = () => {\n    let helperText = undefined;\n    let isValid = true;\n    if (this.state.selectedAnswer === -1) {\n      isValid = false;\n      helperText = \"Please select an answer.\";\n    } else if (\n      this.state.selectedAnswer !== this.props.question.correctAnswer\n    ) {\n      isValid = false;\n      helperText = \"Wrong answer!\";\n    }\n\n    if (!isValid && this.props.showCorrectAnswer) {\n      helperText = `Correct answer: \\n ${\n        this.props.question.answers[this.props.question.correctAnswer]\n      }`;\n    }\n\n    // scroll to top when next question is shown\n    window.scrollTo(0, 0);\n    this.setState({ helperText });\n    this.props.onNext({ isValid });\n  };\n\n  showPreviousQuestion = () => {\n    this.setState({ helperText: undefined });\n    this.props.onPrevious();\n  };\n\n  handleClose = () => {\n    this.setState({ helperText: undefined });\n  };\n\n  render() {\n    const { classes } = this.props;\n    if (this.props.hidden) {\n      return <></>;\n    }\n\n    return (\n      <Slide\n        in={this.props.hidden === false}\n        direction={this.props.direction}\n        mountOnEnter\n        unmountOnExit\n      >\n        <Card className={classes.container}>\n          <CardHeader\n            title={`${this.props.index + 1}. ${this.props.question.question}`}\n          ></CardHeader>\n          <CardContent>\n            {this.props.question.image ? (\n              <Box style={{ textAlign: \"center\" }}>\n                <img\n                  src={\n                    process.env.PUBLIC_URL + \"/img/\" + this.props.question.image\n                  }\n                  alt={this.props.question.image}\n                />\n              </Box>\n            ) : (\n              \"\"\n            )}\n            <FormControl\n              component=\"fieldset\"\n              className={classes.formControl}\n              // TODO: if disabled show success or fail icon\n              disabled={this.props.disableControls}\n              fullWidth\n            >\n              <RadioGroup\n                name=\"quiz-question\"\n                value={this.state.selectedAnswer}\n                onChange={this.handleChange}\n              >\n                {this.props.question.answers.map((answer, index) => (\n                  <FormControlLabel\n                    value={index}\n                    control={<Radio />}\n                    label={answer}\n                    key={`answer-${index}`}\n                  />\n                ))}\n              </RadioGroup>\n            </FormControl>\n            <FormHelperText className={classes.formHelper}>\n              {this.state.helperText}\n            </FormHelperText>\n          </CardContent>\n          <CardActions>\n            {this.props.hidePrevious ? (\n              \"\"\n            ) : (\n              <Button\n                className={classes.leftAlign}\n                color=\"primary\"\n                onClick={this.showPreviousQuestion}\n                disabled={this.props.index === 0}\n              >\n                Previous\n              </Button>\n            )}\n            {this.props.disableControls ? (\n              \"\"\n            ) : (\n              <Button\n                className={classes.rightAlign}\n                color=\"primary\"\n                onClick={this.onNext}\n              >\n                Next\n              </Button>\n            )}\n          </CardActions>\n        </Card>\n      </Slide>\n    );\n  }\n}\n\nconst styles = (theme) => ({\n  formControl: { padding: theme.spacing(2) },\n  formHelper: { textAlign: \"center\", color: theme.palette.error.main },\n  leftAlign: { marginRight: \"auto\" },\n  rightAlign: { marginLeft: \"auto\" },\n  container: { marginBottom: theme.spacing(2), marginTop: theme.spacing(2) },\n});\n\nexport default withStyles(styles)(Question);\n","import {\n  Box,\n  Card,\n  CardContent,\n  CardHeader,\n  Typography,\n} from \"@material-ui/core\";\nimport React from \"react\";\nimport shuffle from \"../../helper/ArrayHelper\";\nimport NavigateBackFab from \"../buttons/NavigateBackFab\";\nimport Question from \"../Question\";\n\nconst EXAM_TIME = 45 * 60;\nconst QUESTIONS_IN_EXAM = 35;\n\nclass Exam extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentIndex: 0,\n      questions: shuffle(props.questions).slice(0, QUESTIONS_IN_EXAM),\n      timeRemaining: EXAM_TIME,\n      correctAnswers: 0,\n      direction: \"down\",\n    };\n    this.props.setIndex(this.state.currentIndex);\n    this.props.setMaxIndex(this.state.questions.length);\n    this.props.setTimeRemaining(this.state.timeRemaining);\n  }\n\n  componentDidMount = () => {\n    this.startTimer();\n  };\n\n  startTimer = () => {\n    this.interval = setInterval(() => {\n      const { timeRemaining } = this.state;\n      const newTimeRemaining = timeRemaining - 1;\n      this.setState({ timeRemaining: newTimeRemaining });\n      this.props.setTimeRemaining(this.state.timeRemaining);\n    }, 1000);\n  };\n\n  stopTimer = () => {\n    if (this.interval) {\n      clearInterval(this.interval);\n      this.setState({ timeRemaining: EXAM_TIME });\n      this.props.setTimeRemaining(this.state.timeRemaining);\n    }\n  };\n\n  incrementCurrentIndex = ({ isValid }) => {\n    const { currentIndex, correctAnswers } = this.state;\n    const nextIndex = currentIndex + 1;\n\n    if (isValid) {\n      this.setState({ correctAnswers: correctAnswers + 1 });\n    }\n\n    if (nextIndex === this.state.questions.length) {\n      this.stopTimer();\n      this.setState({ isFinished: true });\n      return;\n    }\n\n    this.props.setIndex(nextIndex);\n    this.setState({\n      currentIndex: nextIndex,\n      direction: \"left\",\n    });\n  };\n\n  decrementCurrentIndex = () => {\n    let { currentIndex } = this.state;\n    let previousIndex = currentIndex - 1;\n    if (previousIndex < 0) {\n      previousIndex = 0;\n    }\n\n    this.props.setIndex(previousIndex);\n    this.setState({ currentIndex: previousIndex, direction: \"right\" });\n  };\n\n  stopExam = () => {\n    this.props.setIndex(0);\n    this.stopTimer();\n    this.setState({\n      currentIndex: 0,\n      timeRemaining: undefined,\n      correctAnswers: 0,\n    });\n  };\n\n  getResultPercentage = () => {\n    if (this.state.correctAnswers === 0) {\n      return 0;\n    }\n\n    return (this.state.correctAnswers / this.state.questions.length) * 100;\n  };\n\n  renderQuestions = (questions) => {\n    return questions.map((question, index) => (\n      <Question\n        question={question}\n        onNext={this.incrementCurrentIndex}\n        index={index}\n        hidden={this.state.currentIndex !== index && !this.state.isFinished}\n        direction={this.state.direction}\n        key={`question-${index}`}\n        hidePrevious\n        disableControls={this.state.isFinished === true}\n        showCorrectAnswer\n      />\n    ));\n  };\n\n  render() {\n    return (\n      <Box>\n        {this.state.isFinished ? (\n          <Card style={{ marginBottom: \"8px\" }}>\n            <CardHeader title=\"Finished!\"></CardHeader>\n            <CardContent>\n              <Typography>\n                Correct answers: {this.state.correctAnswers} /{\" \"}\n                {this.state.questions.length} ({this.getResultPercentage()}%)\n              </Typography>\n            </CardContent>\n          </Card>\n        ) : (\n          \"\"\n        )}\n        {this.renderQuestions(this.state.questions)}\n        <NavigateBackFab onClick={this.stopExam} />\n      </Box>\n    );\n  }\n}\n\nexport default Exam;\n","import {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  CircularProgress,\n  Typography,\n  withStyles,\n} from \"@material-ui/core\";\nimport React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { Routes } from \"../App\";\n\nclass Home extends React.Component {\n  /**\n   * Redirects to the Training component.\n   *\n   * @memberof Home\n   */\n  startTraining = () => {\n    this.props.history.push(Routes.TRAINING);\n  };\n\n  /**\n   * Redirects to the Exam component.\n   *\n   * @memberof Home\n   */\n  startExam = () => {\n    this.props.history.push(Routes.EXAM);\n  };\n\n  render() {\n    if (this.props.isLoaded === false) {\n      return (\n        <Box display=\"flex\" justifyContent=\"center\">\n          <CircularProgress size={\"10vh\"} />\n        </Box>\n      );\n    }\n\n    const { classes } = this.props;\n    return (\n      <Card>\n        <CardHeader\n          title=\"Please select a mode to start\"\n          style={{ textAlign: \"center\" }}\n        />\n        <CardContent className={classes.container}>\n          <Box flex={1} width={1} p={2}>\n            <Typography>Training-Mode:</Typography>\n            <Typography>\n              Practice all Questions in a row with direct evaluation.\n            </Typography>\n            <Button\n              color=\"secondary\"\n              variant=\"contained\"\n              onClick={this.startTraining}\n            >\n              Start Training\n            </Button>\n          </Box>\n          <Box flex={1} width={1} p={2}>\n            <Typography>Exam-Mode</Typography>\n            <Typography>\n              Practice a certain number of Questions in a row with evaluation\n              after all questions have been answered.\n            </Typography>\n            <Button\n              color=\"secondary\"\n              variant=\"contained\"\n              onClick={this.startExam}\n            >\n              Start Exam\n            </Button>\n          </Box>\n        </CardContent>\n      </Card>\n    );\n  }\n}\n\nconst styles = (theme) => ({\n  container: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n});\n\nexport default withRouter(withStyles(styles)(Home));\n","import { Box } from \"@material-ui/core\";\nimport React from \"react\";\nimport shuffle from \"../../helper/ArrayHelper\";\nimport NavigateBackFab from \"../buttons/NavigateBackFab\";\nimport Question from \"../Question\";\n\nclass Training extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentIndex: 0,\n      questions: shuffle(props.questions),\n      direction: \"down\",\n    };\n    this.props.setIndex(this.state.currentIndex);\n    this.props.setMaxIndex(this.state.questions.length);\n  }\n\n  incrementCurrentIndex = ({ isValid }) => {\n    const { currentIndex } = this.state;\n    let nextIndex = currentIndex + 1;\n    if (nextIndex > this.state.questions.length) {\n      nextIndex = 0;\n    }\n\n    if (!isValid) {\n      return;\n    }\n\n    this.props.setIndex(nextIndex);\n    this.setState({ currentIndex: nextIndex, direction: \"left\" });\n  };\n\n  decrementCurrentIndex = () => {\n    const { currentIndex } = this.state;\n    let previousIndex = currentIndex - 1;\n    if (previousIndex < 0) {\n      previousIndex = 0;\n    }\n\n    this.props.setIndex(previousIndex);\n    this.setState({ currentIndex: previousIndex, direction: \"right\" });\n  };\n\n  stopTraining = () => {\n    this.props.setIndex(0);\n    this.setState({ currentIndex: 0 });\n  };\n\n  renderQuestions = (questions) => {\n    return questions.map((question, index) => (\n      <Question\n        question={question}\n        onNext={this.incrementCurrentIndex}\n        onPrevious={this.decrementCurrentIndex}\n        index={this.state.currentIndex}\n        hidden={index !== this.state.currentIndex}\n        direction={this.state.direction}\n        key={`question-${index}`}\n      />\n    ));\n  };\n\n  render() {\n    return (\n      <Box>\n        {this.renderQuestions(this.state.questions)}\n        <NavigateBackFab onClick={this.stopTraining} />\n      </Box>\n    );\n  }\n}\n\nexport default Training;\n","import {\n  Box,\n  createMuiTheme,\n  CssBaseline,\n  ThemeProvider,\n} from \"@material-ui/core\";\nimport React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport \"./App.scss\";\nimport ConfigurationBar from \"./components/ConfigurationBar\";\nimport Exam from \"./components/exam/Exam\";\nimport Home from \"./components/Home\";\nimport Training from \"./components/training/Training\";\n\nconst appTheme = createMuiTheme({\n  palette: {\n    // type: \"dark\",\n    primary: {\n      main: \"#005400\",\n    },\n    secondary: {\n      main: \"#f08f27\",\n    },\n  },\n});\n\n/**\n * Defines the available app routes\n */\nexport const Routes = Object.freeze({\n  HOME: \"/\",\n  TRAINING: \"/training\",\n  EXAM: \"/exam\",\n});\n\nclass App extends React.Component {\n  state = {\n    allQuestions: [],\n    isLoaded: false,\n    currentIndex: 0,\n    timeRemaining: 0,\n  };\n\n  async componentDidMount() {\n    const allQuestions = await fetch(\"data.json\").then((resp) => resp.json());\n    this.setState({\n      allQuestions,\n      isLoaded: true,\n      maxIndex: allQuestions.length - 1,\n    });\n  }\n\n  setCurrentIndex = (index) => {\n    this.setState({ currentIndex: index });\n  };\n\n  setMaxIndex = (index) => {\n    this.setState({ maxIndex: index });\n  };\n\n  setTimeRemaining = (timeRemaining) => {\n    this.setState({ timeRemaining });\n  };\n\n  render() {\n    return (\n      <ThemeProvider theme={appTheme}>\n        <CssBaseline />\n        <Box\n          width={1}\n          height={1}\n          display=\"flex\"\n          flexDirection=\"column\"\n          data-testid=\"body-container\"\n        >\n          <ConfigurationBar\n            currentQuestionIndex={this.state.currentIndex}\n            maxNumberQuestions={this.state.maxIndex}\n            timeRemaining={this.state.timeRemaining}\n            showQuestion={\n              window.location.pathname === Routes.TRAINING ||\n              window.location.pathname === Routes.EXAM\n            }\n            showTimer={window.location.pathname === Routes.EXAM}\n          />\n\n          <Box flex=\"1 1 auto\" p={2}>\n            <BrowserRouter>\n              <Switch>\n                <Route path={Routes.EXAM}>\n                  {\n                    <Exam\n                      questions={this.state.allQuestions}\n                      setIndex={this.setCurrentIndex}\n                      setMaxIndex={this.setMaxIndex}\n                      setTimeRemaining={this.setTimeRemaining}\n                    />\n                  }\n                </Route>\n                <Route path={Routes.TRAINING}>\n                  <Training\n                    setMaxIndex={this.setMaxIndex}\n                    questions={this.state.allQuestions}\n                    setIndex={this.setCurrentIndex}\n                  />\n                </Route>\n                <Route path={Routes.HOME}>\n                  <Home isLoaded={this.state.isLoaded} />\n                </Route>\n              </Switch>\n            </BrowserRouter>\n          </Box>\n        </Box>\n      </ThemeProvider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}